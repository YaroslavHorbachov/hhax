{
  "root": true,
  "ignorePatterns": ["**/*"],
  "plugins": ["@nrwl/nx", "rxjs", "ngrx"],
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "extends": ["plugin:@nrwl/nx/typescript", "plugin:ngrx/recommended"],
      "rules": {
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "overrides": {
              "constructors": "off"
            }
          }
        ],
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/explicit-function-return-type": ["error"],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "classes": [
              // Index signature
              "signature",

              // Constructors
              "public-constructor",
              "protected-constructor",
              "private-constructor",

              // Abstract fields
              "protected-abstract-field",
              "public-abstract-field",
              "private-abstract-field",

              // Static Fields
              "protected-static-field",
              "public-static-field",
              "private-static-field",

              // Decorated fields
              "protected-decorated-field",
              "public-decorated-field",
              "private-decorated-field",

              // Instance fields
              "protected-instance-field",
              "public-instance-field",
              "private-instance-field",

              // Abstract Methods
              "protected-abstract-method",
              "public-abstract-method",
              "private-abstract-method",

              // Static Methods
              "protected-static-method",
              "public-static-method",
              "private-static-method",

              // Decorated Methods
              "protected-decorated-method",
              "public-decorated-method",
              "private-decorated-method",

              // Instance Methods
              "protected-instance-method",
              "public-instance-method",
              "private-instance-method"
            ],
            "interfaces": [
              "field",
              "method",

              // Index signature
              "signature"
            ]
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase"],
            "modifiers": ["public"],
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "variable",
            "format": ["camelCase", "StrictPascalCase", "UPPER_CASE"]
          },
          {
            "selector": ["variable"],
            "prefix": ["is", "has"],
            "types": ["boolean"],
            "format": ["StrictPascalCase"]
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          },
          {
            "selector": ["property", "parameterProperty", "method", "accessor"],
            "modifiers": ["private", "readonly"],
            "leadingUnderscore": "forbid",
            "format": ["camelCase"]
          },
          {
            "selector": ["property", "parameterProperty", "method", "accessor"],
            "modifiers": ["private"],
            "leadingUnderscore": "forbid",
            "format": ["camelCase"]
          },
          {
            "selector": "enum",
            "format": ["StrictPascalCase"]
          },
          {
            "selector": "enumMember",
            "format": ["StrictPascalCase"]
          }
        ],
        "import/no-deprecated": "off",
        "arrow-parens": ["error", "always"],
        "eqeqeq": ["error", "always"],
        "id-blacklist": "off",
        "id-match": "off",
        "no-underscore-dangle": "off",
        "jsdoc/check-alignment": "off",
        "jsdoc/newline-after-description": "off",
        "padding-line-between-statements": [
          "error",
          { "blankLine": "always", "prev": "*", "next": "return" },
          { "blankLine": "always", "prev": "*", "next": "try" },
          { "blankLine": "always", "prev": "*", "next": "if" },
          { "blankLine": "always", "prev": "*", "next": "switch" },
          { "blankLine": "always", "prev": "*", "next": "while" },
          { "blankLine": "always", "prev": "*", "next": "function" },
          { "blankLine": "always", "prev": "*", "next": "break" },
          { "blankLine": "always", "prev": ["default"], "next": "*" },
          { "blankLine": "always", "prev": ["case"], "next": ["default"] },
          { "blankLine": "always", "prev": ["const", "let"], "next": "*" },
          {
            "blankLine": "any",
            "prev": ["const", "let"],
            "next": ["const", "let"]
          },
          {
            "blankLine": "always",
            "prev": ["if", "try", "switch", "while", "function"],
            "next": "*"
          }
        ],
        "lines-between-class-members": ["error", "always"],
        "implicit-arrow-linebreak": ["error", "beside"],
        "prefer-arrow/prefer-arrow-functions": "off",
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": "error",

        "no-magic-numbers": "off",
        "@typescript-eslint/no-magic-numbers": ["error", { "ignore": [1, 0, -1], "ignoreEnums": true }],
        "no-empty-function": "off",
        "@typescript-eslint/no-empty-function": [
          "error",
          {
            "allow": ["methods"]
          }
        ],
        "space-before-function-paren": "off",
        "@typescript-eslint/space-before-function-paren": [
          "error",
          {
            "anonymous": "always",
            "named": "never",
            "asyncArrow": "always"
          }
        ],
        "max-len": ["off", { "code": 100, "ignorePattern": "^import\\s+\\{\\D+\\}\\s+from\\s+" }],
        "no-fallthrough": "off",
        "@typescript-eslint/no-empty-interface": [
          "error",
          {
            "allowSingleExtends": true
          }
        ],
        "rxjs/no-unsafe-takeuntil": [
          "error",
          {
            "alias": ["untilDestroyed"]
          }
        ],
        "@nrwl/nx/enforce-module-boundaries": [
          "error",
          {
            "allow": [],
            "depConstraints": [
              {
                "sourceTag": "scope:libs",
                "onlyDependOnLibsWithTags": ["scope:libs"]
              },
              {
                "sourceTag": "scope:boilerplate",
                "onlyDependOnLibsWithTags": ["scope:libs"]
              },
              {
                "sourceTag": "scope:mfa",
                "onlyDependOnLibsWithTags": ["scope:libs"]
              },
              {
                "sourceTag": "scope:mpp",
                "onlyDependOnLibsWithTags": ["scope:libs"]
              },
              {
                "sourceTag": "scope:npp",
                "onlyDependOnLibsWithTags": ["scope:libs"]
              }
            ]
          }
        ]
      }
    },
    {
      "files": ["*.js", "*.jsx"],
      "extends": ["plugin:@nrwl/nx/javascript"],
      "rules": {}
    }
  ]
}
